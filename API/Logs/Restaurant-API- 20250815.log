2025-08-15 12:02:13.934 +02:00 [WRN] The entity type 'Address' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.
2025-08-15 12:02:13.967 +02:00 [WRN] No store type was specified for the decimal property 'Price' on entity type 'Dish'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.
2025-08-15 12:02:14.363 +02:00 [INF] Executed DbCommand (13ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-15 12:02:14.374 +02:00 [INF] Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.
2025-08-15 12:02:14.392 +02:00 [INF] Executed DbCommand (15ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';
SELECT @result
2025-08-15 12:02:14.452 +02:00 [INF] Executed DbCommand (2ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL
BEGIN
    CREATE TABLE [__EFMigrationsHistory] (
        [MigrationId] nvarchar(150) NOT NULL,
        [ProductVersion] nvarchar(32) NOT NULL,
        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])
    );
END;
2025-08-15 12:02:14.462 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-15 12:02:14.466 +02:00 [INF] Executed DbCommand (1ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT OBJECT_ID(N'[__EFMigrationsHistory]');
2025-08-15 12:02:14.477 +02:00 [INF] Executed DbCommand (6ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT [MigrationId], [ProductVersion]
FROM [__EFMigrationsHistory]
ORDER BY [MigrationId];
2025-08-15 12:02:14.486 +02:00 [INF] No migrations were applied. The database is already up to date.
2025-08-15 12:02:14.491 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
DECLARE @result int;
EXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';
SELECT @result
2025-08-15 12:02:14.568 +02:00 [INF] Executed DbCommand (14ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT 1
2025-08-15 12:02:14.839 +02:00 [INF] Executed DbCommand (3ms) [Parameters=[], CommandType='"Text"', CommandTimeout='30']
SELECT CASE
    WHEN EXISTS (
        SELECT 1
        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)
    ELSE CAST(0 AS bit)
END
2025-08-15 12:02:16.181 +02:00 [INF] HTTP GET /swagger/v1/swagger.json responded 200 in 23.5979 ms
2025-08-15 12:02:22.984 +02:00 [WRN] You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.
2025-08-15 12:02:23.057 +02:00 [INF] Fetching restaurant with ID: "a3f9c8b2-1e4f-4d6a-9b7e-2c3f8a9d2e1f"
2025-08-15 12:02:23.197 +02:00 [INF] Executed DbCommand (22ms) [Parameters=[@__id_0='?' (DbType = Guid)], CommandType='"Text"', CommandTimeout='30']
SELECT [r0].[Id], [r0].[Category], [r0].[ContactEmail], [r0].[ContactNumber], [r0].[Description], [r0].[HasDelivery], [r0].[Name], [r0].[Address_City], [r0].[Address_PostalCode], [r0].[Address_Street], [d].[Id], [d].[Description], [d].[KilogrammeCalories], [d].[Name], [d].[Price], [d].[RestaurantId]
FROM (
    SELECT TOP(1) [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]
    FROM [Restaurants] AS [r]
    WHERE [r].[Id] = @__id_0
) AS [r0]
LEFT JOIN [Dishes] AS [d] ON [r0].[Id] = [d].[RestaurantId]
ORDER BY [r0].[Id]
2025-08-15 12:02:23.278 +02:00 [INF] HTTP GET /api/Restaurants/A3F9C8B2-1E4F-4D6A-9B7E-2C3F8A9D2E1F responded 200 in 314.9640 ms
{"@t":"2025-08-15T10:06:51.7016448Z","@mt":"The entity type '{entityType}' is an optional dependent using table sharing without any required non shared property that could be used to identify whether the entity exists. If all nullable properties contain a null value in database then an object instance won't be created in the query. Add a required property to create instances with null values for other properties or mark the incoming navigation as required to always create an instance.","@l":"Warning","entityType":"Address","EventId":{"Id":20606,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.OptionalDependentWithoutIdentifyingPropertyWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2025-08-15T10:06:51.7406020Z","@mt":"No store type was specified for the decimal property '{property}' on entity type '{entityType}'. This will cause values to be silently truncated if they do not fit in the default precision and scale. Explicitly specify the SQL server column type that can accommodate all the values in 'OnModelCreating' using 'HasColumnType', specify precision and scale using 'HasPrecision', or configure a value converter using 'HasConversion'.","@l":"Warning","property":"Price","entityType":"Dish","EventId":{"Id":30000,"Name":"Microsoft.EntityFrameworkCore.Model.Validation.DecimalTypeDefaultWarning"},"SourceContext":"Microsoft.EntityFrameworkCore.Model.Validation"}
{"@t":"2025-08-15T10:06:52.1447863Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"12","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.1542050Z","@mt":"Acquiring an exclusive lock for migration application. See https://aka.ms/efcore-docs-migrations-lock for more information if this takes too long.","EventId":{"Id":20411,"Name":"Microsoft.EntityFrameworkCore.Migrations.AcquiringMigrationLock"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}
{"@t":"2025-08-15T10:06:52.1681513Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"12","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_getapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session', @LockMode = 'Exclusive';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2163585Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"IF OBJECT_ID(N'[__EFMigrationsHistory]') IS NULL\r\nBEGIN\r\n    CREATE TABLE [__EFMigrationsHistory] (\r\n        [MigrationId] nvarchar(150) NOT NULL,\r\n        [ProductVersion] nvarchar(32) NOT NULL,\r\n        CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY ([MigrationId])\r\n    );\r\nEND;","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2243876Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"0","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2282695Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"1","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT OBJECT_ID(N'[__EFMigrationsHistory]');","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2336486Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [MigrationId], [ProductVersion]\r\nFROM [__EFMigrationsHistory]\r\nORDER BY [MigrationId];","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2393384Z","@mt":"No migrations were applied. The database is already up to date.","EventId":{"Id":20405,"Name":"Microsoft.EntityFrameworkCore.Migrations.MigrationsNotApplied"},"SourceContext":"Microsoft.EntityFrameworkCore.Migrations"}
{"@t":"2025-08-15T10:06:52.2421510Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"2","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"DECLARE @result int;\r\nEXEC @result = sp_releaseapplock @Resource = '__EFMigrationsLock', @LockOwner = 'Session';\r\nSELECT @result","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.2663069Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"7","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT 1","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:52.4143184Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","elapsed":"3","parameters":"","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT CASE\r\n    WHEN EXISTS (\r\n        SELECT 1\r\n        FROM [Restaurants] AS [r]) THEN CAST(1 AS bit)\r\n    ELSE CAST(0 AS bit)\r\nEND","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command"}
{"@t":"2025-08-15T10:06:53.3078264Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["14.0476"],"@tr":"dc8ada23c2a5390fc29a1994d3d4f444","@sp":"a512701bf2edd20e","RequestMethod":"GET","RequestPath":"/swagger/v1/swagger.json","StatusCode":200,"Elapsed":14.0476,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
{"@t":"2025-08-15T10:07:00.4716046Z","@mt":"You do not have a valid license key for the Lucky Penny software MediatR. This is allowed for development and testing scenarios. If you are running in production you are required to have a licensed version. Please visit https://luckypennysoftware.com to obtain a valid license.","@l":"Warning","@tr":"2df413c9b0a8106714302c2eb975c306","@sp":"197c7cb52cd47c06","SourceContext":"LuckyPennySoftware.MediatR.License","ActionId":"e733e514-ecb3-42e9-baf9-7c26fde7c2a8","ActionName":"API.Controllers.RestaurantsController.GetRestaurantById (API)","RequestId":"0HNERSDQJE8LG:00000007","RequestPath":"/api/Restaurants/A3F9C8B2-1E4F-4D6A-9B7E-2C3F8A9D2E1F","ConnectionId":"0HNERSDQJE8LG"}
{"@t":"2025-08-15T10:07:00.5637446Z","@mt":"Fetching restaurant with ID: {RestaurantId}","@tr":"2df413c9b0a8106714302c2eb975c306","@sp":"197c7cb52cd47c06","RestaurantId":"a3f9c8b2-1e4f-4d6a-9b7e-2c3f8a9d2e1f","SourceContext":"Application.Features.Queries.GetSingle.GetSingleRestaurantQueryHandler","ActionId":"e733e514-ecb3-42e9-baf9-7c26fde7c2a8","ActionName":"API.Controllers.RestaurantsController.GetRestaurantById (API)","RequestId":"0HNERSDQJE8LG:00000007","RequestPath":"/api/Restaurants/A3F9C8B2-1E4F-4D6A-9B7E-2C3F8A9D2E1F","ConnectionId":"0HNERSDQJE8LG"}
{"@t":"2025-08-15T10:07:00.7302551Z","@mt":"Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}","@tr":"2df413c9b0a8106714302c2eb975c306","@sp":"197c7cb52cd47c06","elapsed":"25","parameters":"@__id_0='?' (DbType = Guid)","commandType":"Text","commandTimeout":30,"newLine":"\r\n","commandText":"SELECT [r0].[Id], [r0].[Category], [r0].[ContactEmail], [r0].[ContactNumber], [r0].[Description], [r0].[HasDelivery], [r0].[Name], [r0].[Address_City], [r0].[Address_PostalCode], [r0].[Address_Street], [d].[Id], [d].[Description], [d].[KilogrammeCalories], [d].[Name], [d].[Price], [d].[RestaurantId]\r\nFROM (\r\n    SELECT TOP(1) [r].[Id], [r].[Category], [r].[ContactEmail], [r].[ContactNumber], [r].[Description], [r].[HasDelivery], [r].[Name], [r].[Address_City], [r].[Address_PostalCode], [r].[Address_Street]\r\n    FROM [Restaurants] AS [r]\r\n    WHERE [r].[Id] = @__id_0\r\n) AS [r0]\r\nLEFT JOIN [Dishes] AS [d] ON [r0].[Id] = [d].[RestaurantId]\r\nORDER BY [r0].[Id]","EventId":{"Id":20101,"Name":"Microsoft.EntityFrameworkCore.Database.Command.CommandExecuted"},"SourceContext":"Microsoft.EntityFrameworkCore.Database.Command","ActionId":"e733e514-ecb3-42e9-baf9-7c26fde7c2a8","ActionName":"API.Controllers.RestaurantsController.GetRestaurantById (API)","RequestId":"0HNERSDQJE8LG:00000007","RequestPath":"/api/Restaurants/A3F9C8B2-1E4F-4D6A-9B7E-2C3F8A9D2E1F","ConnectionId":"0HNERSDQJE8LG"}
{"@t":"2025-08-15T10:07:00.8201770Z","@mt":"HTTP {RequestMethod} {RequestPath} responded {StatusCode} in {Elapsed:0.0000} ms","@r":["371.9608"],"@tr":"2df413c9b0a8106714302c2eb975c306","@sp":"197c7cb52cd47c06","RequestMethod":"GET","RequestPath":"/api/Restaurants/A3F9C8B2-1E4F-4D6A-9B7E-2C3F8A9D2E1F","StatusCode":200,"Elapsed":371.9608,"SourceContext":"Serilog.AspNetCore.RequestLoggingMiddleware"}
